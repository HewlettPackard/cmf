apiVersion: apps/v1
kind: Deployment
metadata:
  name: cmf-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cmf
  template:
    metadata:
      labels:
        app: cmf
    spec:
      containers:
      - name: cmf-server
        image: localhost:5000/cmf-server:latest
        ports:
        - containerPort: 8080 # CMF server port
        env:
        - name: MYIP
          value: "192.168.30.116"
        volumeMounts:
        - mountPath: /cmf-server/data
          name: server-data
        - mountPath: /cmf-server/data/static
          name: server-static
        - mountPath: /cmf-server/data/tensorboard-logs
          name: tensorboard-logs
        readinessProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 10
        # Add resources and volume mounts if needed 
      - name: cmf-ui
        image: localhost:5000/cmf-ui:latest
        ports:
        - containerPort: 3000 # CMF UI port
        # Add resources and volume mounts if needed
        env:
        - name: REACT_APP_MY_IP
          value: "192.168.30.116"
        - name: REACT_APP_MY_HOSTNAME
          value: ""
      volumes:
      - name: server-data
        persistentVolumeClaim:
          claimName: pvc-server-data
      - name: server-static
        persistentVolumeClaim:
          claimName: pvc-server-static
      - name: tensorboard-logs
        persistentVolumeClaim:
          claimName: pvc-tensorboard-logs
---
apiVersion: v1
kind: Service
metadata:
  name: cmf-service
spec:
  type: LoadBalancer
  ports:
  - name: cmf-server-port
    port: 8080 # External port for CMF Server access
    targetPort: 8080 # CMF server container port
  - name: cmf-ui-port
    port: 3000 # External port for CMF UI access
    targetPort: 3000 # CMF UI container port
  selector:
    app: cmf
